1. 概览

                actions
-------------------------------------------
    

    select algorithms, statistics, etc


-------------------------------------------
        Globals (single instance)

                |  |  |

                |  |  |
               resources 

              file parsers

                inputs


基本框架如上图

. 对于单纯的信息显示，actions 直接调用globals获得resources, 进行显示
. 对于算法相关的功能，actions 调用相关的算法类，算法类调用 Globals访问相应的resources



2. 详细描述
2.1 types
列出分类和显示分类下的股票信息, typesaction 直接访问 Globals获取 types类
详细见 resources-classes/types

2.2 parse
如果只是显示股票的基本信息，则直接 parseaction 访问 Globals获取 stock类
如果还要显示它在指定算法下的评价，则和select类打交道

2.3 update
update action 直接调用update下面的类

2.4 holded

2.5 select
select action调用select下面的算法类(Select类).

BaseSelect(prefilters[], addings[], postfilters)
prefilters[], postfilters[]: 是类列表，元素属于 BaseFilter(Stock)
addings[]: 类列表，元素属于 BaseAdding(Stock)

算法：
. globals in class
    _pass[] = []
    _fails[] = []
    _selectratio = 1/2.0

. prefilters
  对于每一只股票 (in Globals::stocks())
    . 对于prefilters每个filter
        if not filter.pass():
            _fails[stockid] = filter.name()
            break
    . try fails[stockid] except:
        _pass[].append(Stock)
            
. addings 即dratio求值
  ads = dict()
  对于每一个addings中的Adding:
    ll = ads[Adding.name()] = []
    对_pass[]中的每一个Stock:
        if 第一个Stock:
            ll.append(Stock)
        else:
            对于ll中的每一个Stock:
                if 当前stock的dratio > Stock的dratio:
                    ll.insert()
                else:
                    ll.append(当前Stock)
                
. 交集
  half_ads = ads 取_selectratio
  first = half_ads[first addings name()]
  copy first to overlap

  for s in first:
    for every addings:
        if not s in half_ads[adding name]
            overlap.remove(s)
            break

. post  
  对每一只股票in overlap ... TODO


详细见 select-classes

2.6 test
2.6.1 statistics

2.6.2 







